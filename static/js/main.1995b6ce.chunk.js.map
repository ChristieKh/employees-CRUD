{"version":3,"sources":["components/ItemCard.js","containers/Cards.js","components/ButtonsForChangeItem.js","containers/Form.js","containers/Employees.js","App.js","serviceWorker.js","index.js"],"names":["ItemCard","_ref","data","_ref$data","person","work","birthday","gender","employ","react_default","a","createElement","className","Card","selectItem","employees","map","employer","index","id","key","onClick","components_ItemCard","ButtonsForChangeItem","addItem","deleteItem","Form","state","validationError","personRef","React","createRef","workRef","birthdayRef","genderRef","employRef","onBtnClickAddHandler","e","_this$state","_this","setState","props","onAddItem","preventDefault","onChangeItem","_this$state2","handleInputValueChange","current","value","handleInputCheckChange","checked","_this2","this","_this$props","onDeleteItem","components_ButtonsForChangeItem","activeItem","ref","type","defaultValue","onChange","name","selected","disabled","hidden","defaultChecked","Component","App","elementNew","document","getElementById","firstChild","elementOld","classList","remove","add","Object","objectSpread","handleAddItem","nextItem","toConsumableArray","concat","handleRemoveItem","splice","handleChangeItem","dataItem","newData","newDataItem","react","Form_Form","Boolean","window","location","hostname","match","ReactDOM","render","App_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1995b6ce.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst ItemCard = ({data, data: {person, work, birthday, gender, employ}}) => {\r\n        return (\r\n                <div className=\"item1 card-content\">\r\n                    <p className=\"item__person\">ФИО сотрудника: {data && person}</p>\r\n                    <p className=\"item__work\">Должность: {data && work}</p>\r\n                    <p className=\"item__birthday\">Дата рождения: {data && birthday}</p>\r\n                    <p className=\"item__gender\">Пол: {data && gender === \"m\" ? \"мужской\" : \"женский\"}</p>\r\n                    <p className=\"item__employ\">Уволен: {data && employ === true ? \"да\" : \"нет\" }</p>\r\n                </div>\r\n        );\r\n};\r\n\r\nexport default ItemCard;","import React from 'react';\r\nimport ItemCard from '../components/ItemCard';\r\n\r\nexport default function Card({data, selectItem}) {\r\n\r\n   const employees = data.map((employer, index) => {\r\n        return (\r\n            <div className=\"card item\"\r\n                 id={index}\r\n                 key={index}\r\n                 onClick={() => {selectItem(index)}}>\r\n                <ItemCard data={employer} index={index}/>\r\n            </div>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div className=\"workers\">\r\n            {employees}\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nconst ButtonsForChangeItem = ({addItem, deleteItem}) => {\r\n    return (\r\n        <div className=\"buttons\">\r\n            <button className=\"btn btn-add blue\"\r\n                    onClick={addItem}>\r\n                <span><i className=\"fa fa-plus\"/>Добавить сотрудника</span>\r\n            </button>\r\n            <button className=\"btn btn-del blue\"\r\n                    onClick={deleteItem}>\r\n                <span><i className=\"fa fa-remove\"/>Удалить сотрудника</span>\r\n            </button>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ButtonsForChangeItem;","import React from 'react';\r\nimport ButtonsForChangeItem from \"../components/ButtonsForChangeItem\";\r\n\r\nexport default class Form extends React.Component {\r\n    state = {\r\n        person: null,\r\n        work: null,\r\n        birthday: null,\r\n        gender: null,\r\n        employ: null,\r\n        validationError: false\r\n    };\r\n\r\n    personRef = React.createRef();\r\n    workRef = React.createRef();\r\n    birthdayRef = React.createRef();\r\n    genderRef = React.createRef();\r\n    employRef = React.createRef();\r\n\r\n    onBtnClickAddHandler = e => {\r\n        const {person, work, birthday, gender, employ} = this.state;\r\n        if (person === null || work === null || birthday === null || gender === null || employ === null) {\r\n            this.setState({validationError: true})\r\n        } else {\r\n            this.props.onAddItem({person, work, birthday, gender, employ});\r\n            this.setState({validationError: false})\r\n        }\r\n        e.preventDefault();\r\n    };\r\n\r\n    onChangeItem = e => {\r\n        e.preventDefault();\r\n        const {person, work, birthday, gender, employ} = this.state;\r\n        this.props.onChangeItem({person, work, birthday, gender, employ});\r\n    };\r\n\r\n    handleInputValueChange = () => {\r\n        this.setState({\r\n            person: this.personRef.current.value,\r\n            work: this.workRef.current.value,\r\n            birthday: this.birthdayRef.current.value,\r\n        })\r\n    };\r\n\r\n    handleInputCheckChange = () => {\r\n        this.setState({\r\n            gender: this.genderRef.current.checked,\r\n            employ: this.employRef.current.checked\r\n        })\r\n    };\r\n\r\n    render() {\r\n        const {data, onDeleteItem} = this.props;\r\n        return (\r\n            <div className=\"form__box\">\r\n                <form className=\"form card-content\">\r\n                    {this.state.validationError &&\r\n                    <div className=\"card-panel red darken-1 center\">Заполните все поля!</div>}\r\n                    <ButtonsForChangeItem addItem={this.onBtnClickAddHandler}\r\n                                          deleteItem={() => onDeleteItem(this.props.activeItem)}/>\r\n                    <label>ФИО</label>\r\n                    <input ref={this.personRef}\r\n                           type=\"text\"\r\n                           defaultValue={data ? data.person : this.state.person}\r\n                           onChange={this.handleInputValueChange}/>\r\n                    <label>Должность</label>\r\n                    <select className=\"browser-default\" onChange={this.handleInputValueChange} name=\"option\"\r\n                            ref={this.workRef}>\r\n                        <option selected disabled hidden>\r\n                            {data && data.work}\r\n                        </option>\r\n                        <option value=\"Разработчик\">Разработчик</option>\r\n                        <option value=\"Дизайнер\">Дизайнер</option>\r\n                        <option value=\"Аналитик\">Аналитик</option>\r\n                        <option value=\"Тестировщик\">Тестировщик</option>\r\n                    </select>\r\n                    <label>День рождения</label>\r\n                    <input type=\"date\"\r\n                           ref={this.birthdayRef}\r\n                           onChange={this.handleInputValueChange}\r\n                           defaultValue={data && data.birthday}/>\r\n                    <label className=\"gender\">Пол\r\n                        <p>\r\n                            <label>\r\n                                <input type=\"radio\"\r\n                                       ref={this.genderRef}\r\n                                       className=\"with-gap\"\r\n                                       name=\"gender\"\r\n                                       value=\"m\"\r\n                                       defaultChecked={data && data.gender === \"m\"}\r\n                                       onChange={this.handleInputCheckChange}/>\r\n                                <span>м</span>\r\n                            </label>\r\n                        </p>\r\n                        <p>\r\n                            <label>\r\n                                <input type=\"radio\"\r\n                                       ref={this.genderRef}\r\n                                       className=\"with-gap\"\r\n                                       name=\"gender\"\r\n                                       value=\"w\"\r\n                                       defaultChecked={data && data.gender === \"w\"}\r\n                                       onChange={this.handleInputCheckChange}/>\r\n                                <span>ж</span>\r\n                            </label>\r\n                        </p>\r\n                    </label>\r\n                    <p className=\"employ\">\r\n                        <label>\r\n                            <input type=\"checkbox\"\r\n                                   ref={this.employRef}\r\n                                   defaultChecked={data ? data.employ : this.state.employ}\r\n                                   onChange={this.handleInputCheckChange}/>\r\n                            <span>Сотрудник уволен</span>\r\n                        </label>\r\n                    </p>\r\n                    <button className=\"btn blue btn-change\" onClick={this.onChangeItem}>\r\n                        <span><i className=\"fa fa-pencil-square-o\"/>Изменить</span>\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}","export const data = [\r\n    {\r\n        person: \"Печорин Роман Денисович\",\r\n        work: \"Разработчик\",\r\n        birthday: \"2014-02-01\",\r\n        gender: \"m\",\r\n        employ: true\r\n    },\r\n    {\r\n        person: \"Васильева Ирина Петровна\",\r\n        work: \"Аналитик\",\r\n        birthday: \"1992-12-25\",\r\n        gender: \"w\",\r\n        employ: true\r\n    },\r\n    {\r\n        person: \"Данилов Кирилл Сергеевич\",\r\n        work: \"Тестировщик\",\r\n        birthday: \"1994-01-01\",\r\n        gender: \"m\",\r\n        employ: false\r\n    }\r\n];","import React, {Component, Fragment} from \"react\";\r\nimport Cards from \"./containers/Cards\";\r\nimport Form from \"./containers/Form\";\r\nimport {data} from \"./containers/Employees\";\r\n\r\nexport default class App extends Component {\r\n    state = {\r\n        data: data,\r\n        activeItem: -1\r\n    };\r\n\r\n    selectItem = index => {\r\n        const elementNew = document.getElementById(index).firstChild;\r\n        const elementOld = this.state.activeItem > -1 ? document.getElementById(this.state.activeItem).firstChild : null;\r\n\r\n        if (elementOld !== elementNew) {\r\n            if (elementOld !== null) {\r\n                elementOld.classList.remove(\"colorAdd\");\r\n                elementNew.classList.add(\"colorAdd\");\r\n            } else {\r\n                elementNew.classList.add(\"colorAdd\");\r\n            }\r\n            this.setState({\r\n                ...this.state,\r\n                activeItem: index\r\n            });\r\n        } else {\r\n            elementNew.classList.remove(\"colorAdd\");\r\n            this.setState({\r\n                ...this.state,\r\n                activeItem: -1\r\n            });\r\n        }\r\n    };\r\n\r\n    handleAddItem = data => {\r\n        const nextItem = [...this.state.data, data];\r\n        this.setState({data: nextItem});\r\n    };\r\n\r\n    handleRemoveItem = activeItem => {\r\n        data.splice(activeItem, 1);\r\n        this.setState({data});\r\n    };\r\n\r\n    handleChangeItem = dataItem => {\r\n        const {data, activeItem} = this.state;\r\n        let newData = data;\r\n        const newDataItem = newData[activeItem];\r\n        dataItem.person ? newDataItem.person = dataItem.person : newDataItem.person = data[activeItem].person;\r\n        dataItem.work ? newDataItem.work = dataItem.work : newDataItem.work = data[activeItem].work;\r\n        dataItem.birthday ? newDataItem.birthday = dataItem.birthday : newDataItem.birthday = data[activeItem].birthday;\r\n        dataItem.gender ? newDataItem.gender = dataItem.gender : newDataItem.gender = data[activeItem].gender;\r\n        dataItem.employ ? newDataItem.employ = dataItem.employ : newDataItem.employ = data[activeItem].employ;\r\n        this.setState({\r\n            ...this.state,\r\n            data: newData\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {data, activeItem} = this.state;\r\n        return (\r\n            <Fragment>\r\n                <nav>\r\n                    <div className=\"nav-wrapper blue\">\r\n                        <div className=\"container\">\r\n                            <h1 className=\"brand-logo center\">Список сотрудников</h1>\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n                <div className=\"container grid-container-main\">\r\n                    <Cards className=\"grid-container-left\"\r\n                           data={data}\r\n                           selectItem={this.selectItem}/>\r\n                    <Form className=\"grid-container-right\"\r\n                          data={activeItem > -1 && data[activeItem]}\r\n                          onAddItem={this.handleAddItem}\r\n                          onDeleteItem={this.handleRemoveItem}\r\n                          onChangeItem={this.handleChangeItem}/>\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n\r\n              // Execute callback\r\n              if (config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}