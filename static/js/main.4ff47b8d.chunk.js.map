{"version":3,"sources":["ItemCard.js","Cards.js","Form.js","Employees.js","App.js","serviceWorker.js","index.js"],"names":["ItemCard","props","react_default","a","createElement","className","data","person","work","birthday","gender","employ","Card","employees","map","employer","index","id","key","onClick","selectItem","Form","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onBtnClickAddHandler","e","preventDefault","_this$state","state","onAddItem","onChangeItem","_this$state2","handlePersonChange","setState","currentTarget","value","handleWorkChange","handleBirthdayChange","handleGenderChange","checked","console","log","handleEmployChange","_this2","method","action","type","onDeleteItem","activeItem","required","defaultValue","onChange","name","selected","disabled","hidden","defaultChecked","React","Component","App","elementNew","document","getElementById","firstChild","elementOld","classList","remove","add","objectSpread","handleAddItem","nextItem","toConsumableArray","concat","handleRemoveItem","splice","handleChangeItem","newData","Form_Form","Boolean","window","location","hostname","match","ReactDOM","render","App_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4ff47b8d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nexport default function ItemCard(props) {\r\n        return (\r\n            <div>\r\n                <div className=\"item1\" >\r\n                    <p className=\"item__person\">ФИО сотрудника: {props.data ? props.data.person : null}</p>\r\n                    <p className=\"item__work\">Должность: {props.data ? props.data.work : null}</p>\r\n                    <p className=\"item__birthday\">Дата рождения: {props.data ? props.data.birthday : null}</p>\r\n                    <p className=\"item__gender\">Пол: {props.data ? props.data.gender === \"m\" ? \"мужской\" : \"женский\" : null}</p>\r\n                    <p className=\"item__employ\">Уволен: {props.data ? props.data.employ === true ? \"да\" : \"нет\" : null}</p>\r\n                </div>\r\n            </div>\r\n        );\r\n}","import React from 'react';\r\nimport ItemCard from './ItemCard';\r\n\r\nexport default function Card(props){\r\n        var employees = props.data.map((employer, index) => {\r\n            return (\r\n                <div\r\n                    className=\"item\"\r\n                    id={index}\r\n                    key={index}\r\n                    onClick={() => {props.selectItem(index)}}\r\n                >\r\n                    <ItemCard data={employer} index={index} />\r\n                </div>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div className=\"workers\">\r\n                {employees}\r\n            </div>\r\n        );\r\n\r\n\r\n}","import React from 'react';\r\n\r\nexport default class Form extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n                person: null,\r\n                work: null,\r\n                birthday: null,\r\n                gender: null,\r\n                employ: null\r\n        };\r\n    }\r\n\r\n    onBtnClickAddHandler = e => {\r\n        e.preventDefault();\r\n        const { person, work, birthday, gender, employ } = this.state;\r\n        this.props.onAddItem({ person, work, birthday, gender, employ });\r\n\r\n    };\r\n\r\n    onChangeItem = e => {\r\n        e.preventDefault();\r\n        const { person, work, birthday, gender, employ } = this.state;\r\n        this.props.onChangeItem({ person, work, birthday, gender, employ });\r\n\r\n    };\r\n\r\n    handlePersonChange = e => {\r\n        this.setState({ person: e.currentTarget.value });\r\n    };\r\n\r\n    handleWorkChange = e => {\r\n        this.setState({ work: e.currentTarget.value });\r\n    };\r\n\r\n    handleBirthdayChange = e => {\r\n        this.setState({ birthday: e.currentTarget.value });\r\n    };\r\n\r\n    handleGenderChange = e => {\r\n        this.setState({ gender: e.currentTarget.checked});\r\n        console.log(e.currentTarget.checked);\r\n    };\r\n\r\n    handleEmployChange = e => {\r\n        this.setState({ employ: e.currentTarget.checked });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"form__box\">\r\n                <form className=\"form\" method=\"\" action=\"\">\r\n                    <div className=\"buttons\">\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"btn btn-add\"\r\n                            value=\"submit\"\r\n                            onClick={this.onBtnClickAddHandler}\r\n                        >\r\n                            Добавить сотрудника\r\n                        </button>\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"btn btn-del\"\r\n                            value=\"submit\"\r\n                            onClick={() => this.props.onDeleteItem(this.props.activeItem)}\r\n                        >\r\n                            Удалить сотрудника\r\n                        </button>\r\n                    </div>\r\n                    <label>ФИО </label>\r\n                    <input\r\n                        id=\"fio\"\r\n                        type=\"text\"\r\n                        required={true}\r\n                        defaultValue={\r\n                            this.props.data ? this.props.data.person : this.state.person\r\n                        }\r\n                        onChange={this.handlePersonChange}\r\n                    />\r\n                    <label>Должность</label>\r\n                    <select onChange={this.handleWorkChange} name=\"option\" id=\"work\">\r\n                        <option selected disabled hidden>\r\n                            {this.props.data ? this.props.data.work : null}\r\n                        </option>\r\n                        <option value=\"Разработчик\">Разработчик</option>\r\n                        <option value=\"Дизайнер\">Дизайнер</option>\r\n                        <option value=\"Аналитик\">Аналитик</option>\r\n                        <option value=\"Тестировщик\">Тестировщик</option>\r\n                    </select>\r\n                    <label>День рождения</label>\r\n                    <input\r\n                        type=\"date\"\r\n                        id=\"bday\"\r\n                        onChange={this.handleBirthdayChange}\r\n                        defaultValue={this.props.data ? this.props.data.birthday : null}\r\n                    />\r\n\r\n                    <label className=\"gender\">Пол </label>\r\n                    <div className=\"radio\">\r\n                        <label>\r\n                            <input\r\n                                type=\"radio\"\r\n                                className=\"radio\"\r\n                                name=\"gender\"\r\n                                value=\"m\"\r\n                                defaultChecked={\r\n                                    this.props.data ? this.props.data.gender === \"m\" : null\r\n                                }\r\n                                onChange={this.handleGenderChange}\r\n                            />м\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"radio\">\r\n                        <label>\r\n                            <input\r\n                                type=\"radio\"\r\n                                className=\"radio\"\r\n                                name=\"gender\"\r\n                                value=\"w\"\r\n                                defaultChecked={\r\n                                    this.props.data ? this.props.data.gender === \"w\" : null\r\n                                }\r\n                                onChange={this.handleGenderChange}\r\n                            />ж\r\n                        </label>\r\n                    </div>\r\n                    <label>\r\n                        Уволен\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            id=\"employ\"\r\n                            defaultChecked={this.props.data ? this.props.data.employ : this.state.employ}\r\n                            onChange={this.handleEmployChange}\r\n                        />\r\n                    </label>\r\n                    <button className=\"btn\" type=\"submit\" value=\"submit\" onClick={this.onChangeItem}>\r\n                        Изменить\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}","export const data = [\r\n    {\r\n        person: \"Печорин Роман Денисович\",\r\n        work: \"Разработчик\",\r\n        birthday: \"2014-02-01\",\r\n        gender: \"m\",\r\n        employ: true\r\n    },\r\n    {\r\n        person: \"Васильева Ирина Петровна\",\r\n        work: \"Аналитик\",\r\n        birthday: \"1992-12-25\",\r\n        gender: \"w\",\r\n        employ: true\r\n    },\r\n    {\r\n        person: \"Данилов Кирилл Сергеевич\",\r\n        work: \"Тестировщик\",\r\n        birthday: \"1994-01-01\",\r\n        gender: \"m\",\r\n        employ: false\r\n    }\r\n];","import React, { Component } from \"react\";\nimport Cards from \"./Cards\";\nimport Form from \"./Form\";\nimport { data } from \"./Employees\";\n\nexport default class App extends Component {\n    constructor() {\n        super();\n        this.state = {\n            data: data,\n            activeItem: -1\n        };\n    }\n\n    selectItem = index => {\n        const elementNew = document.getElementById(index).firstChild;\n        const elementOld = this.state.activeItem > -1 ? document.getElementById(this.state.activeItem).firstChild : null;\n\n        if (elementOld !== elementNew) {\n            if (elementOld !== null) {\n                elementOld.classList.remove(\"colorAdd\");\n                elementNew.classList.add(\"colorAdd\");\n\n            } else {\n                elementNew.classList.add(\"colorAdd\");\n            }\n            this.setState({\n                ...this.state,\n                activeItem: index\n            });\n            console.log(\"добавили цвет\")\n        } else {\n            elementNew.classList.remove(\"colorAdd\");\n            this.setState({\n                ...this.state,\n                activeItem: -1\n            });\n            console.log(\"убрали цвет\")\n        }\n    };\n\n    handleAddItem = data => {\n        const nextItem = [...this.state.data, data];\n        this.setState({ data: nextItem });\n    };\n\n    handleRemoveItem = activeItem => {\n        data.splice(activeItem, 1);\n        this.setState({ data: data });\n    };\n\n    handleChangeItem = data => {\n        let newData = this.state.data;\n        const activeItem = this.state.activeItem;\n        data ? newData[activeItem].person = data.person : newData[activeItem].person = this.state.data[activeItem].person;\n        data ? newData[activeItem].work = data.work : newData[activeItem].work = this.state.data[activeItem].work;\n        data ? newData[activeItem].birthday = data.birthday : newData[activeItem].birthday = this.state.data[activeItem].birthday;\n        data ? newData[activeItem].gender = data.gender : newData[activeItem].gender = this.state.data[activeItem].gender;\n        data ? newData[activeItem].employ = data.employ : newData[activeItem].employ = this.state.data[activeItem].employ;\n\n        this.setState({\n            ...this.state,\n            data: newData\n        });\n    };\n    render() {\n        return (\n            <div>\n                <h1>Список сотрудников</h1>\n                <div className=\"grid-container-main\">\n                    <Cards\n                        className=\"grid-container-left\"\n                        data={this.state.data}\n                        selectItem={this.selectItem}\n                    />\n                    <Form\n                        className=\"grid-container-right\"\n                        data={this.state.activeItem > -1 ? this.state.data[this.state.activeItem] : null}\n                        onAddItem={this.handleAddItem}\n                        onDeleteItem={this.handleRemoveItem}\n                        onChangeItem={this.handleChangeItem}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}